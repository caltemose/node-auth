// Generated by CoffeeScript 1.6.3
(function() {
  var Form,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  Form = (function() {
    function Form(house) {
      var bound_fields, self;
      this.house = house;
      this.reset = __bind(this.reset, this);
      this.process_submission = __bind(this.process_submission, this);
      self = this;
      this.fields = [];
      $('input, select', this.house).focus(function() {
        return $('body').trigger("fieldchange");
      });
      bound_fields = this.fields;
      this.house.children('input').each(function() {
        if (!$(this).attr('type' === 'submit')) {
          return bound_fields.push(new Field($(this), self));
        }
      });
      this.house.submit(this.process_submission);
      this.post = function() {
        return false;
      };
      this.house.on('reset_form', this.reset);
    }

    Form.prototype.process_submission = function() {
      return false;
    };

    Form.prototype.reset = function() {
      var field, _i, _len, _ref, _results;
      _ref = this.fields;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        field = _ref[_i];
        _results.push(field.reset());
      }
      return _results;
    };

    return Form;

  })();

}).call(this);
